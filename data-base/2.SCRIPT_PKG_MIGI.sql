
--------------------------------------------------------
--  DDL for Package PKG_MIGI_ADMIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "MIGI"."PKG_MIGI_ADMIN" AS 

  PROCEDURE USP_PRC_GUARDAR_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_CORREO VARCHAR2,
    PI_NOMBRES VARCHAR2,
    PI_APELLIDOS VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PI_ID_ROL NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_USUARIO_CORREO(
    PI_CORREO  IN VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_VERIFICAR_EMAIL(
    PI_EMAIL_USUARIO  IN VARCHAR2,
    PI_VERIFICAR      OUT NUMBER
  );

  PROCEDURE USP_UPD_CAMBIAR_CLAVE(
      PI_ID_USUARIO NUMBER,
      PI_CONTRASENA VARCHAR2,
      PO_ROWAFFECTED OUT NUMBER
  );

END PKG_MIGI_ADMIN;

/

--------------------------------------------------------
--  DDL for Package PKG_MIGI_EXCEL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "MIGI"."PKG_MIGI_EXCEL" AS 

  PROCEDURE USP_SEL_VERIFICAR_EXCEL(
    PI_NOMBRE VARCHAR2,
    PI_ANIO VARCHAR2,
    PI_MES VARCHAR2,
    PI_ID_TIPO_EXCEL NUMBER,
    PO_VERIFICAR OUT NUMBER
  );

  PROCEDURE USP_PRC_GUARDAR_EXCEL(
    PI_NOMBRE VARCHAR2,
    PI_ANIO VARCHAR2,
    PI_MES VARCHAR2,
    PI_ID_TIPO_EXCEL NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ID_EXCEL OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_DEL_DATOS_EXCEL(
    PI_ID_EXCEL NUMBER,
    PI_ID_TIPO_EXCEL NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_VERIFICAR_ORDEN(
        PI_ANIO NUMBER,
        PI_MES NUMBER,
        PI_ORDEN VARCHAR,
        PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_VERIFICAR_CONV_MIEMBRO(
        PI_CODIGOCONVOCATORIA VARCHAR2,
        PI_MIEMBRO VARCHAR2,
        PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_EXCEL(
    PI_TIPO_EXCEL NUMBER,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

END PKG_MIGI_EXCEL;

/

--------------------------------------------------------
--  DDL for Package PKG_MIGI_FILTRO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "MIGI"."PKG_MIGI_FILTRO" AS 

  PROCEDURE USP_SEL_FILTRAR(
    PI_PALABRAS VARCHAR2,
    PI_PALABRAS_OMITIDAS VARCHAR2,
    PI_ANIOS VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ); 
  
  PROCEDURE USP_SEL_FILTRAR_M8U(
    PI_PALABRAS VARCHAR2,
    PI_PALABRAS_OMITIDAS VARCHAR2,
    PI_ANIOS VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_FILTRAR_GRAFICON1(
    PI_SQL VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_FILTRAR_PALABRA_BUSQ(
    PI_SQL VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_INS_GUARDAR_RESULTADO(
    PI_ID_TIPO_BUSQUEDA NUMBER,    
    PI_ID_USUARIO NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_PALABRA(
    PI_PALABRA VARCHAR2,  
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_PALABRA_CANT(
    PI_PALABRA_CANTIDAD VARCHAR2,  
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_ANIO(
    PI_ANIO VARCHAR2,  
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

END PKG_MIGI_FILTRO;

/

--------------------------------------------------------
--  DDL for Package PKG_MIGI_MANTENIMIENTO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "MIGI"."PKG_MIGI_MANTENIMIENTO" AS 

  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_USUARIO(
    PI_ID_USUARIO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  -- MANTENIMIENTO ANIO
  PROCEDURE USP_SEL_LISTA_BUSQ_ANIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_ANIO(
    PI_ID_ANIO IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_ANIO(
    PI_ID_ANIO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  PROCEDURE USP_PRC_GUARDAR_ANIO(
    PI_ID_ANIO IN OUT NUMBER,
    PI_ANIO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  -- MANTENIMIENTO EQUIPO
  PROCEDURE USP_SEL_LISTA_BUSQ_EQUIPO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_EQUIPO(
    PI_ID_EQUIPO IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_EQUIPO(
    PI_ID_EQUIPO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_EQUIPO(
    PI_ID_EQUIPO IN OUT NUMBER,
    PI_EQUIPO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  -- MANTENIMIENTO PALABRA CLAVE
  PROCEDURE USP_SEL_LISTA_BUSQ_PALABRA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_PALABRA(
    PI_ID_PALABRA IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_PALABRA(
    PI_ID_PALABRA IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_PALABRA(
    PI_ID_PALABRA IN OUT NUMBER,
    PI_PALABRA VARCHAR2,
    PI_ID_EQUIPO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  -- MANTENIMIENTO PALABRA CLAVE CANTIDAD
  PROCEDURE USP_SEL_LISTA_BUSQ_PALABRA_C(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_PALABRA_CANTIDAD(
    PI_ID_PALABRA_CANTIDAD IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_PALABRA_CANTIDAD(
    PI_ID_PALABRA_CANTIDAD IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_PALABRA_CANT(
    PI_ID_PALABRA_CANTIDAD IN OUT NUMBER,
    PI_PALABRA_CANTIDAD VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_ANIO(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_EQUIPO(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_PALABRAS(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_PALABRAS_CANT(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  );

END PKG_MIGI_MANTENIMIENTO;

/

--------------------------------------------------------
--  DDL for Package PKG_MIGI_RESULTADO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "MIGI"."PKG_MIGI_RESULTADO" AS 

  PROCEDURE USP_SEL_LISTA_RESULTADO(
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_RESULTADO(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_PALABRA_CLAVE(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_PALABRA_CANT(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_ANIO(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  );

  PROCEDURE USP_DEL_ELIMINAR_RESULTADO(
    PI_ID_RESULTADO NUMBER,    
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

END PKG_MIGI_RESULTADO;

/




--------------------------------------------------------
--  DDL for Package Body PKG_MIGI_ADMIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "MIGI"."PKG_MIGI_ADMIN" AS

  PROCEDURE USP_PRC_GUARDAR_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_CORREO VARCHAR2,
    PI_NOMBRES VARCHAR2,
    PI_APELLIDOS VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PI_ID_ROL NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT U.ID_USUARIO FROM T_GENM_USUARIO U WHERE U.ID_USUARIO = PI_ID_USUARIO)
    INTO vID
    FROM DUAL;

    IF vID IS NULL THEN
      PI_ID_USUARIO := SQ_GENM_USUARIO.NEXTVAL();
      INSERT INTO T_GENM_USUARIO
      (ID_USUARIO, NOMBRES, APELLIDOS, CORREO, CONTRASENA, ID_ROL, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_USUARIO, PI_NOMBRES, PI_APELLIDOS, PI_CORREO, PI_CONTRASENA, PI_ID_ROL, PI_FLAG_ESTADO, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_USUARIO U SET
      U.NOMBRES = PI_NOMBRES,
      U.APELLIDOS = PI_APELLIDOS,
      U.FLAG_ESTADO = PI_FLAG_ESTADO
      WHERE U.ID_USUARIO = PI_ID_USUARIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_USUARIO;
  
  PROCEDURE USP_SEL_USUARIO_CORREO(
        PI_CORREO  IN VARCHAR2,
        PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
      OPEN PO_REFCURSOR FOR
      SELECT
      *
      FROM T_GENM_USUARIO
      WHERE LOWER(TRANSLATE(CORREO,'¡…Õ”⁄·ÈÌÛ˙','AEIOUaeiou')) = LOWER(TRANSLATE(PI_CORREO,'¡…Õ”⁄·ÈÌÛ˙','AEIOUaeiou'));
  END USP_SEL_USUARIO_CORREO;
  
  PROCEDURE USP_SEL_VERIFICAR_EMAIL(
    PI_EMAIL_USUARIO  IN VARCHAR2,
    PI_VERIFICAR      OUT NUMBER
  ) IS
    vVerificar  NUMBER;
  BEGIN
        SELECT COUNT(*) INTO vVerificar
        FROM T_GENM_USUARIO
        WHERE LOWER(TRANSLATE(CORREO,'¡…Õ”⁄·ÈÌÛ˙','AEIOUaeiou')) = LOWER(TRANSLATE(PI_EMAIL_USUARIO,'¡…Õ”⁄·ÈÌÛ˙','AEIOUaeiou'));
        PI_VERIFICAR := vVerificar;
  END USP_SEL_VERIFICAR_EMAIL;

  PROCEDURE USP_UPD_CAMBIAR_CLAVE(
      PI_ID_USUARIO NUMBER,
      PI_CONTRASENA VARCHAR2,
      PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_USUARIO 
    SET CONTRASENA = PI_CONTRASENA
    WHERE ID_USUARIO = PI_ID_USUARIO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_CAMBIAR_CLAVE;

END PKG_MIGI_ADMIN;

/

--------------------------------------------------------
--  DDL for Package Body PKG_MIGI_EXCEL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "MIGI"."PKG_MIGI_EXCEL" AS

  PROCEDURE USP_SEL_VERIFICAR_EXCEL(
    PI_NOMBRE VARCHAR2,
    PI_ANIO VARCHAR2,
    PI_MES VARCHAR2,
    PI_ID_TIPO_EXCEL NUMBER,
    PO_VERIFICAR OUT NUMBER
  ) AS
    vCONT NUMBER;
  BEGIN
    IF PI_ID_TIPO_EXCEL = 1 THEN
      SELECT COUNT(*) INTO vCONT FROM T_GENM_EXCEL WHERE ANIO = PI_ANIO AND MES = PI_MES AND FLAG_ESTADO = '1';
    ELSE
      SELECT COUNT(*) INTO vCONT FROM T_GENM_EXCEL WHERE NOMBRE = PI_NOMBRE AND FLAG_ESTADO = '1';
    END IF;    
    PO_VERIFICAR := vCONT;
  END USP_SEL_VERIFICAR_EXCEL;

  PROCEDURE USP_PRC_GUARDAR_EXCEL(
    PI_NOMBRE VARCHAR2,
    PI_ANIO VARCHAR2,
    PI_MES VARCHAR2,
    PI_ID_TIPO_EXCEL NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ID_EXCEL OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    IF vID IS NULL THEN
      vID := SQ_GENM_EXCEL.NEXTVAL();
      INSERT INTO T_GENM_EXCEL
      (ID_EXCEL, NOMBRE, ANIO, MES, ID_TIPO_EXCEL, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_ANIO, PI_MES, PI_ID_TIPO_EXCEL, PI_UPD_USUARIO, SYSDATE);
    END IF;
    PO_ID_EXCEL := vID;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_EXCEL;

  PROCEDURE USP_DEL_DATOS_EXCEL(
    PI_ID_EXCEL NUMBER,
    PI_ID_TIPO_EXCEL NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_EXCEL SET FLAG_ESTADO = '0' WHERE ID_EXCEL = PI_ID_EXCEL;
    IF PI_ID_TIPO_EXCEL = 1 THEN      
      --UPDATE T_GENM_MIGI SET FLAG_ESTADO = '0' WHERE ID_EXCEL = PI_ID_EXCEL;
      DELETE FROM T_GENM_MIGI WHERE ID_EXCEL = PI_ID_EXCEL;
    ELSE
      --UPDATE T_GENM_MIGI_M8U SET FLAG_ESTADO = '0' WHERE ID_EXCEL = PI_ID_EXCEL;
      DELETE FROM T_GENM_MIGI_M8U WHERE ID_EXCEL = PI_ID_EXCEL;
    END IF;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_DATOS_EXCEL;
  
  PROCEDURE USP_SEL_VERIFICAR_ORDEN(
        PI_ANIO NUMBER,
        PI_MES NUMBER,
        PI_ORDEN VARCHAR,
        PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
      OPEN PO_REFCURSOR FOR
      SELECT COUNT(*) FROM T_GENM_MIGI
      WHERE ANIO = PI_ANIO AND MES = PI_MES AND ORDEN = PI_ORDEN;
  END USP_SEL_VERIFICAR_ORDEN;
  
  PROCEDURE USP_SEL_VERIFICAR_CONV_MIEMBRO(
        PI_CODIGOCONVOCATORIA VARCHAR2,
        PI_MIEMBRO VARCHAR2,
        PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
      OPEN PO_REFCURSOR FOR
      SELECT COUNT(*) FROM T_GENM_MIGI_M8U
      WHERE CODIGOCONVOCATORIA = PI_CODIGOCONVOCATORIA AND MIEMBRO = PI_MIEMBRO;
  END USP_SEL_VERIFICAR_CONV_MIEMBRO;
  
  PROCEDURE USP_SEL_LISTA_EXCEL(
    PI_TIPO_EXCEL NUMBER,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_EXCEL
                    WHERE ID_TIPO_EXCEL = ' || PI_TIPO_EXCEL;
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  ID_EXCEL,
                                NOMBRE,
                                ANIO,
                                MES,
                                ID_TIPO_EXCEL,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_EXCEL
                        WHERE ID_TIPO_EXCEL = ' || PI_TIPO_EXCEL || ' AND FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_EXCEL;

END PKG_MIGI_EXCEL;

/

--------------------------------------------------------
--  DDL for Package Body PKG_MIGI_FILTRO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "MIGI"."PKG_MIGI_FILTRO" AS

  PROCEDURE USP_SEL_FILTRAR(
    PI_PALABRAS VARCHAR2,
    PI_PALABRAS_OMITIDAS VARCHAR2,
    PI_ANIOS VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
    vSQL VARCHAR2(4000);
  BEGIN
    vSQL := 'SELECT * FROM T_GENM_MIGI WHERE ('|| PI_PALABRAS ||')  '|| PI_PALABRAS_OMITIDAS ||'  AND (ANIO IN ('|| PI_ANIOS ||')) AND (OBJETOCONTRACTUAL LIKE ''%SERVICIOS%'' OR OBJETOCONTRACTUAL LIKE ''%BIENES%'')';
    OPEN PO_REFCURSOR FOR vSQL;
  END USP_SEL_FILTRAR;
  
  PROCEDURE USP_SEL_FILTRAR_M8U(
    PI_PALABRAS VARCHAR2,
    PI_PALABRAS_OMITIDAS VARCHAR2,
    PI_ANIOS VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
    vSQL VARCHAR2(4000);
  BEGIN
    vSQL := 'SELECT * FROM T_GENM_MIGI_M8U WHERE ('|| PI_PALABRAS ||')  '|| PI_PALABRAS_OMITIDAS ||'  '|| PI_ANIOS ||' AND (OBJETO_CONTRACTUAL LIKE ''%SERVICIOS%'' OR OBJETO_CONTRACTUAL LIKE ''%BIENES%'')';
    OPEN PO_REFCURSOR FOR vSQL;
  END USP_SEL_FILTRAR_M8U;
  
  PROCEDURE USP_SEL_FILTRAR_GRAFICON1(
    PI_SQL VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
    vSQL VARCHAR2(4000);
  BEGIN
    vSQL := PI_SQL;
    OPEN PO_REFCURSOR FOR vSQL;
  END USP_SEL_FILTRAR_GRAFICON1;
  
  PROCEDURE USP_SEL_FILTRAR_PALABRA_BUSQ(
    PI_SQL VARCHAR2,
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
    vSQL VARCHAR2(4000);
  BEGIN
    vSQL := PI_SQL;
    OPEN PO_REFCURSOR FOR vSQL;
  END USP_SEL_FILTRAR_PALABRA_BUSQ;
  
  PROCEDURE USP_INS_GUARDAR_RESULTADO(
    PI_ID_TIPO_BUSQUEDA NUMBER,    
    PI_ID_USUARIO NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    PI_ID_GET := SQ_GENM_RESULTADO.NEXTVAL();
    INSERT INTO T_GENM_RESULTADO
    (ID_RESULTADO, ID_TIPO_BUSQUEDA, ID_USUARIO, REG_USUARIO, REG_FECHA)
    VALUES
    (PI_ID_GET, PI_ID_TIPO_BUSQUEDA, PI_ID_USUARIO, PI_ID_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_RESULTADO;
  
  PROCEDURE USP_INS_GUARDAR_PALABRA(
    PI_PALABRA VARCHAR2,  
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    vID := SQ_GEND_RESULTADO_PALABRA_CLAV.NEXTVAL();
    INSERT INTO T_GEND_RESULTADO_PALABRA_CLAVE
    (ID_PALABRA_RESULTADO, ID_RESULTADO, PALABRA, ID_USUARIO, REG_USUARIO, REG_FECHA)
    VALUES
    (vID, PI_ID_RESULTADO, PI_PALABRA, PI_ID_USUARIO, PI_ID_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_PALABRA;
  
  PROCEDURE USP_INS_GUARDAR_PALABRA_CANT(
    PI_PALABRA_CANTIDAD VARCHAR2,  
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    vID := SQ_GEND_RESULTADO_PALABRA_CANT.NEXTVAL();
    INSERT INTO T_GEND_RESULTADO_PALABRA_CANT
    (ID_PALABRA_CANT_RESULTADO, ID_RESULTADO, PALABRA_CANTIDAD, ID_USUARIO, REG_USUARIO, REG_FECHA)
    VALUES
    (vID, PI_ID_RESULTADO, PI_PALABRA_CANTIDAD, PI_ID_USUARIO, PI_ID_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_PALABRA_CANT;
  
  PROCEDURE USP_INS_GUARDAR_ANIO(
    PI_ANIO VARCHAR2,  
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    vID := SQ_GEND_RESULTADO_ANIO.NEXTVAL();
    INSERT INTO T_GEND_RESULTADO_ANIO
    (ID_ANIO_RESULTADO, ID_RESULTADO, ANIO, ID_USUARIO, REG_USUARIO, REG_FECHA)
    VALUES
    (vID, PI_ID_RESULTADO, PI_ANIO, PI_ID_USUARIO, PI_ID_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_ANIO;

END PKG_MIGI_FILTRO;

/

--------------------------------------------------------
--  DDL for Package Body PKG_MIGI_MANTENIMIENTO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "MIGI"."PKG_MIGI_MANTENIMIENTO" AS

  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_USUARIO U
                    WHERE (
                    LOWER(TRANSLATE(U.NOMBRES,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.CORREO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' )';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    IF PI_COLUMNA = 'ESTADO' THEN
      vCOLUMNA := 'U.FLAG_ESTADO';
    ELSE
      vCOLUMNA := PI_COLUMNA;
    END IF;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  U.ID_USUARIO,
                                U.NOMBRES,
                                U.APELLIDOS,
                                U.CORREO,
                                U.ID_ROL,
                                U.FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_USUARIO U
                        WHERE (
                        LOWER(TRANSLATE(U.NOMBRES,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.CORREO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' )
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_USUARIO;
  
  PROCEDURE USP_SEL_USUARIO(
    PI_ID_USUARIO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT *
    FROM T_GENM_USUARIO	 
    WHERE   ID_USUARIO = PI_ID_USUARIO;
  END USP_SEL_USUARIO; 
  
  -- MANTENIMIENTO ANIO
  PROCEDURE USP_SEL_LISTA_BUSQ_ANIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_ANIO
                    WHERE
                    LOWER(TRANSLATE(ANIO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  ID_ANIO,
                                ANIO,
                                FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_ANIO
                        WHERE
                        LOWER(TRANSLATE(ANIO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND 
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_ANIO;
  
  PROCEDURE USP_DEL_ANIO(
    PI_ID_ANIO IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_ANIO SET
    FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_ANIO = PI_ID_ANIO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_ANIO;
  
  PROCEDURE USP_SEL_ANIO(
    PI_ID_ANIO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT *
    FROM T_GENM_ANIO	 
    WHERE   ID_ANIO = PI_ID_ANIO;
  END USP_SEL_ANIO;
  
  PROCEDURE USP_PRC_GUARDAR_ANIO(
    PI_ID_ANIO IN OUT NUMBER,
    PI_ANIO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT ID_ANIO FROM T_GENM_ANIO U WHERE ID_ANIO = PI_ID_ANIO)
    INTO vID FROM DUAL;

    IF vID IS NULL THEN
      PI_ID_ANIO := SQ_GENM_ANIO.NEXTVAL();
      INSERT INTO T_GENM_ANIO
      (ID_ANIO, ANIO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_ANIO, PI_ANIO, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_ANIO SET
      ANIO = PI_ANIO,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_ANIO = PI_ID_ANIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_ANIO;
  
  -- MANTENIMIENTO EQUIPO
  PROCEDURE USP_SEL_LISTA_BUSQ_EQUIPO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_EQUIPO
                    WHERE
                    LOWER(TRANSLATE(EQUIPO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  ID_EQUIPO,
                                EQUIPO,
                                FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_EQUIPO
                        WHERE
                        LOWER(TRANSLATE(EQUIPO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND 
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_EQUIPO;
  
  PROCEDURE USP_DEL_EQUIPO(
    PI_ID_EQUIPO IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_EQUIPO SET
    FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_EQUIPO = PI_ID_EQUIPO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_EQUIPO;
  
  PROCEDURE USP_SEL_EQUIPO(
    PI_ID_EQUIPO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT *
    FROM T_GENM_EQUIPO	 
    WHERE   ID_EQUIPO = PI_ID_EQUIPO;
  END USP_SEL_EQUIPO;
  
  PROCEDURE USP_PRC_GUARDAR_EQUIPO(
    PI_ID_EQUIPO IN OUT NUMBER,
    PI_EQUIPO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT ID_EQUIPO FROM T_GENM_EQUIPO WHERE ID_EQUIPO = PI_ID_EQUIPO)
    INTO vID FROM DUAL;

    IF vID IS NULL THEN
      PI_ID_EQUIPO := SQ_GENM_EQUIPO.NEXTVAL();
      INSERT INTO T_GENM_EQUIPO
      (ID_EQUIPO, EQUIPO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_EQUIPO, PI_EQUIPO, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_EQUIPO SET
      EQUIPO = PI_EQUIPO,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_EQUIPO = PI_ID_EQUIPO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_EQUIPO;
  
  -- MANTENIMIENTO PALABRA CLAVE
  PROCEDURE USP_SEL_LISTA_BUSQ_PALABRA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_PALABRA_CLAVE PC
                    INNER JOIN T_GENM_EQUIPO E ON PC.ID_EQUIPO = E.ID_EQUIPO
                    WHERE (
                    LOWER(TRANSLATE(PC.PALABRA,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR 
                    LOWER(TRANSLATE(E.EQUIPO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'')
                    AND PC.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    IF PI_COLUMNA = 'ID_PALABRA' THEN
      vCOLUMNA := 'PC.ID_PALABRA';
    ELSE
      IF PI_COLUMNA = 'PALABRA' THEN
        vCOLUMNA := 'PC.PALABRA';
      ELSE
        IF PI_COLUMNA = 'EQUIPO' THEN
          vCOLUMNA := 'E.EQUIPO';
        END IF;
      END IF;
    END IF;    

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  PC.ID_PALABRA,
                                PC.PALABRA,
                                E.ID_EQUIPO,
                                E.EQUIPO NOMBRE_EQUIPO,
                                PC.FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_PALABRA_CLAVE PC
                        INNER JOIN T_GENM_EQUIPO E ON PC.ID_EQUIPO = E.ID_EQUIPO
                        WHERE
                        (
                        LOWER(TRANSLATE(PC.PALABRA,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR 
                        LOWER(TRANSLATE(E.EQUIPO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'')
                        AND PC.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_PALABRA;
  
  PROCEDURE USP_DEL_PALABRA(
    PI_ID_PALABRA IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_PALABRA_CLAVE SET
    FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_PALABRA = PI_ID_PALABRA;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_PALABRA;
  
  PROCEDURE USP_SEL_PALABRA(
    PI_ID_PALABRA IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT *
    FROM T_GENM_PALABRA_CLAVE	 
    WHERE  ID_PALABRA = PI_ID_PALABRA;
  END USP_SEL_PALABRA;
  
  PROCEDURE USP_PRC_GUARDAR_PALABRA(
    PI_ID_PALABRA IN OUT NUMBER,
    PI_PALABRA VARCHAR2,
    PI_ID_EQUIPO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT ID_PALABRA FROM T_GENM_PALABRA_CLAVE WHERE ID_PALABRA = PI_ID_PALABRA)
    INTO vID FROM DUAL;

    IF vID IS NULL THEN
      PI_ID_PALABRA := SQ_GENM_PALABRA_CLAVE.NEXTVAL();
      INSERT INTO T_GENM_PALABRA_CLAVE
      (ID_PALABRA, PALABRA, ID_EQUIPO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_PALABRA, PI_PALABRA, PI_ID_EQUIPO, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_PALABRA_CLAVE SET
      PALABRA = PI_PALABRA,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_PALABRA = PI_ID_PALABRA;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_PALABRA;
  
  -- MANTENIMIENTO PALABRA CLAVE CANTIDAD
  PROCEDURE USP_SEL_LISTA_BUSQ_PALABRA_C(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_PALABRA_CLAVE_CANTIDAD PC
                    WHERE 
                    LOWER(TRANSLATE(PC.PALABRA_CANTIDAD,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' 
                    AND PC.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    IF PI_COLUMNA = 'ID_PALABRA_CANTIDAD' THEN
      vCOLUMNA := 'PC.ID_PALABRA_CANTIDAD';
    ELSE
      IF PI_COLUMNA = 'PALABRA_CANTIDAD' THEN
        vCOLUMNA := 'PC.PALABRA_CANTIDAD';
      END IF;
    END IF;    

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  PC.ID_PALABRA_CANTIDAD,
                                PC.PALABRA_CANTIDAD,
                                PC.FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_PALABRA_CLAVE_CANTIDAD PC
                        WHERE
                        LOWER(TRANSLATE(PC.PALABRA_CANTIDAD,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' 
                        AND PC.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_PALABRA_C;
  
  PROCEDURE USP_DEL_PALABRA_CANTIDAD(
    PI_ID_PALABRA_CANTIDAD IN NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_PALABRA_CLAVE_CANTIDAD SET
    FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_PALABRA_CANTIDAD = PI_ID_PALABRA_CANTIDAD;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_PALABRA_CANTIDAD;
  
  PROCEDURE USP_SEL_PALABRA_CANTIDAD(
    PI_ID_PALABRA_CANTIDAD IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT *
    FROM T_GENM_PALABRA_CLAVE_CANTIDAD	 
    WHERE  ID_PALABRA_CANTIDAD = PI_ID_PALABRA_CANTIDAD;
  END USP_SEL_PALABRA_CANTIDAD;
  
  PROCEDURE USP_PRC_GUARDAR_PALABRA_CANT(
    PI_ID_PALABRA_CANTIDAD IN OUT NUMBER,
    PI_PALABRA_CANTIDAD VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT ID_PALABRA_CANTIDAD FROM T_GENM_PALABRA_CLAVE_CANTIDAD WHERE ID_PALABRA_CANTIDAD = PI_ID_PALABRA_CANTIDAD)
    INTO vID FROM DUAL;

    IF vID IS NULL THEN
      PI_ID_PALABRA_CANTIDAD := SQ_GENM_PALABRA_CLAVE_CANTIDAD.NEXTVAL();
      INSERT INTO T_GENM_PALABRA_CLAVE_CANTIDAD
      (ID_PALABRA_CANTIDAD, PALABRA_CANTIDAD, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_PALABRA_CANTIDAD, PI_PALABRA_CANTIDAD, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_PALABRA_CLAVE_CANTIDAD SET
      PALABRA_CANTIDAD = PI_PALABRA_CANTIDAD,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_PALABRA_CANTIDAD = PI_ID_PALABRA_CANTIDAD;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_PALABRA_CANT;
  
  --LISTAS GENERALES
  PROCEDURE USP_SEL_LISTA_ANIO(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GENM_ANIO
    WHERE FLAG_ESTADO = '1'
    ORDER BY ANIO ASC;
  END USP_SEL_LISTA_ANIO;
  
  PROCEDURE USP_SEL_LISTA_EQUIPO(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GENM_EQUIPO
    WHERE FLAG_ESTADO = '1';
  END USP_SEL_LISTA_EQUIPO;
  
  PROCEDURE USP_SEL_LISTA_PALABRAS(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GENM_PALABRA_CLAVE
    WHERE FLAG_ESTADO = '1';
  END USP_SEL_LISTA_PALABRAS;
  
  PROCEDURE USP_SEL_LISTA_PALABRAS_CANT(
    PO_REFCURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GENM_PALABRA_CLAVE_CANTIDAD
    WHERE FLAG_ESTADO = '1';
  END USP_SEL_LISTA_PALABRAS_CANT;

END PKG_MIGI_MANTENIMIENTO;

/

--------------------------------------------------------
--  DDL for Package Body PKG_MIGI_RESULTADO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "MIGI"."PKG_MIGI_RESULTADO" AS

  PROCEDURE USP_SEL_LISTA_RESULTADO(
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_RESULTADO';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  ID_RESULTADO,
                                REG_FECHA,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_RESULTADO
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_RESULTADO;
  
  PROCEDURE USP_SEL_RESULTADO(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GENM_RESULTADO
    WHERE ID_RESULTADO = PI_ID_RESULTADO;
  END USP_SEL_RESULTADO;
  
  PROCEDURE USP_SEL_LISTA_PALABRA_CLAVE(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GEND_RESULTADO_PALABRA_CLAVE
    WHERE ID_RESULTADO = PI_ID_RESULTADO;
  END USP_SEL_LISTA_PALABRA_CLAVE;
  
  PROCEDURE USP_SEL_LISTA_PALABRA_CANT(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GEND_RESULTADO_PALABRA_CANT
    WHERE ID_RESULTADO = PI_ID_RESULTADO;
  END USP_SEL_LISTA_PALABRA_CANT;
  
  PROCEDURE USP_SEL_LISTA_ANIO(
    PI_ID_RESULTADO NUMBER,
    PO_REFCURSOR OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REFCURSOR FOR
    SELECT * FROM T_GEND_RESULTADO_ANIO
    WHERE ID_RESULTADO = PI_ID_RESULTADO;
  END USP_SEL_LISTA_ANIO;

  PROCEDURE USP_DEL_ELIMINAR_RESULTADO(
    PI_ID_RESULTADO NUMBER,    
    PI_ID_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_RESULTADO
    SET 
    FLAG_ESTADO = '0',
    UPD_USUARIO = PI_ID_USUARIO
    WHERE ID_RESULTADO = PI_ID_RESULTADO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_ELIMINAR_RESULTADO;

END PKG_MIGI_RESULTADO;

/

